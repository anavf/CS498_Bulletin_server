var BulletinControllers=angular.module("BulletinControllers",[]);BulletinControllers.controller("LoginController",["$scope","$rootScope","$location","Data",function($scope,$rootScope,$location,Data){$scope.user="",$scope.login=function(){Data.getUsers().success(function(data){for(var users=data.data,i=0;i<users.length;i++)if($('input[name="email"]').val()==users[i].email&&$('input[name="password"]').val()==users[i].password){$scope.user=users[i],$location.path("/"+$scope.user._id+"/HomePage"),document.getElementById("RC_loginLink").innerHTML="Log out",document.getElementById("RC_loginLink").onclick=function(){$rootScope.$apply(function(){$location.path("/HomePage")}),document.getElementById("RC_loginLink").innerHTML="Log in",document.getElementById("RC_loginLink").onclick=function(){openModal("#RC_loginModal")},location.reload()},closeModal("#RC_loginModal");break}})}}]),BulletinControllers.controller("FirstController",["$scope","CommonData",function($scope,CommonData){$scope.data="",$scope.displayText="",$scope.setData=function(){CommonData.setData($scope.data),$scope.displayText="Data set"}}]),BulletinControllers.controller("SecondController",["$scope","CommonData",function($scope,CommonData){$scope.data="",$scope.getData=function(){$scope.data=CommonData.getData()}}]),BulletinControllers.controller("LlamaListController",["$scope","$http","Llamas","$window",function($scope,$http,Llamas,$window){Llamas.get().success(function(data){$scope.llamas=data})}]),BulletinControllers.controller("SettingsController",["$scope","$window",function($scope,$window){$scope.url=$window.sessionStorage.baseurl,$scope.setUrl=function(){$window.sessionStorage.baseurl=$scope.url,$scope.displayText="URL set"}}]),BulletinControllers.controller("AccountSettingsController",["$scope","$routeParams","$http","Data",function($scope,$routeParams,$http,Data){Data.getProfile().success(function(data){$scope.user=data.data,$scope.id=$scope.user._id,$scope.saveAccountSettings=function(){Data.getUser($scope.id).success(function(data){var password=$scope.user.password;$('input[name="password1"]').val()==$('input[name="password2"]').val()&&""!=$('input[name="password1"]').val()&&(password=$('input[name="password1"]').val());var imageURL=$('input[name="imageURL"]').val();""==$('input[name="imageURL"]').val()&&(imageURL="./data/images/profile.jpg");var newUser={name:$('input[name="name"]').val(),email:$('input[name="email"]').val(),password:$('input[name="password1"]').val(),imageURL:imageURL};$http.put("http://localhost:4000/api/AccountSettings",newUser).success(function(data){window.location.href="#/MyProfilePage"})})}})}]),BulletinControllers.controller("SignUpController",["$scope","Data",function($scope,Data){$scope.createAccount=function(){if($('input[name="password"]').val()==$('input[name="password2"]').val()){var imageURL=$('input[name="imageURL"]').val();""==imageURL&&(imageURL="./data/images/profile.jpg"),$scope.newuser.imageURL=imageURL,console.log($scope.newuser),Data.createUser($scope.newuser).success(function(data){window.location.href="#/MyProfilePage"})}}}]),BulletinControllers.controller("HomeController",["$scope","$http","Data","$window",function($scope,$http,Data,$window){$(document).foundation(),$scope.username="",$scope.password="",$scope.isLoggedIn=!1,Data.getProfile().success(function(data){console.log(data.data),null!=data.data&&($scope.isLoggedIn=!0,$scope.thisUser=data.data)}),$scope.showSettingsMenu=function(){$("#settingsMenu").toggle()},$scope.logOut=function(){$http.get("http://localhost:4000/api/logout").success(function(data){location.reload()})},$scope.goToCreatePage=function(){window.location="#/CreateProject"}}]),BulletinControllers.controller("MyProfileController",["$scope","$rootScope","$window","Data","$http","$route","$routeParams",function($scope,$rootScope,$window,Data,$http,$route,$routeParams){$(document).foundation(),$rootScope.basicQuery="",$scope.loggedIn=!0,$scope.low=0,$scope.high=3,$scope.lowJP=0,$scope.highJP=3,$scope.startOfList=!0,$scope.startOfJPList=!0,$scope.shown=3,$scope.showSettingsMenu=function(){$("#settingsMenu").toggle()},$scope.logOut=function(){$http.get("http://localhost:4000/api/logout").success(function(data){$window.location.href="#/HomePage"})},$scope.username="",$scope.skills=[],$scope.myProjects=[],$scope.joinedProjects=[],$scope.pendingProjects=[],$scope.skillNames=[],$scope.newSkill="",Data.getProfile().success(function(data){$scope.userX=data.data,$scope.userid=data.data._id,$scope.username=data.data.name,$scope.skills=data.data.skills,$scope.myProjects=data.data.myProjects,console.log($scope.userX),$scope.joinedProjects=data.data.joinedProjects,$scope.pendingProjects=data.data.pendingProjects,$scope.image=data.data.imageURL;for(var i=0;i<$scope.skills.length;i++)Data.getSkill($scope.skills[i]).success(function(data){$scope.skillName=data.data.name,$scope.skillNames.push($scope.skillName)}).error(function(data){console.log("Error: "+data)});$scope.joinedProjectsInfo=[];for(var i=0;i<$scope.joinedProjects.length;i++)Data.getProject($scope.joinedProjects[i]).success(function(data){console.log("Got joined projects: "+data.data),$scope.joinedProjectX=data.data,$scope.joinedProjectsInfo.push($scope.joinedProjectX)}).error(function(data){console.log("Error: "+data)});$http({url:'http://localhost:4000/api/projects?where={"creator":"'+$scope.userid+'"}&count=true',method:"GET"}).success(function(data){$scope.count=data.data,console.log("Count: "+$scope.count),$scope.high>=$scope.count?$scope.endOfList=!0:$scope.endOfList=!1}).error(function(data){console.log("Error: "+data)}),$http({url:'http://localhost:4000/api/projects?where={"creator":"'+$scope.userid+'"}&skip='+$scope.low+"&limit=3",method:"GET"}).success(function(data){$scope.projects=data.data}).error(function(data){console.log("Error: "+data)}),$http({url:'http://localhost:4000/api/projects?where={"approvedMembers":"'+$scope.userid+'"}',method:"GET"}).success(function(data){$scope.joinedProjectsAM=data.data,console.log($scope.joinedProjectsAll),$scope.pendingAM=[];for(var i=0;i<$scope.joinedProjectsAM.length;i++)$scope.pendingAM[i]="Accepted";$http({url:'http://localhost:4000/api/projects?where={"pendingMembers":"'+$scope.userid+'"}',method:"GET"}).success(function(data){$scope.joinedProjectsPM=data.data,$scope.joinedProjectsAll=$scope.joinedProjectsAM.concat($scope.joinedProjectsPM),console.log($scope.joinedProjectsAll),$scope.countJP=$scope.joinedProjectsAll.length,$scope.highJP>=$scope.countJP?$scope.endOfJPList=!0:$scope.endOfJPList=!1,$scope.pendingPM=[];for(var i=0;i<$scope.joinedProjectsPM.length;i++)$scope.pendingPM[i]="Pending";$scope.pending=$scope.pendingAM.concat($scope.pendingPM),console.log($scope.pending),$scope.repeatData=$scope.joinedProjectsAll.map(function(value,index){return{data:value,value:$scope.pending[index]}}),console.log("Repeat Data: "+$scope.repeatData)}).error(function(data){console.log("Error: "+data)})}).error(function(data){console.log("Error: "+data)}),$scope.allSkillsNames=[],Data.getSkills().success(function(data){$scope.allSkills=data.data,console.log("got all skills");for(var i=0;i<$scope.allSkills.length;i++)Data.getSkill($scope.allSkills[i]._id).success(function(data){$scope.oneSkillName=data.data.name,$scope.allSkillsNames.push($scope.oneSkillName)}).error(function(data){console.log("Error: "+data)})}).error(function(data){console.log("Error: "+data)}),$scope.setSkillInput=function(name){$scope.newSkill=name},$scope.loadDetails=function(id){Data.getProject(id).success(function(data){$scope.projectY=data.data}).error(function(data){console.log("Error: "+data)})},$scope.nextPage=function(){$scope.low=$scope.high,$scope.high+=3,$scope.startOfList=!1,console.log("Count: "+$scope.count+" Low, High: "+$scope.low+", "+$scope.high),$http({url:'http://localhost:4000/api/projects?where={"creator":"'+$scope.userid+'"}&skip='+$scope.low+"&limit=3",method:"GET"}).success(function(data){$scope.projects=data.data,$scope.high>=$scope.count?($scope.high=$scope.count,$scope.endOfList=!0):$scope.endOfList=!1}).error(function(data){console.log("Error: "+data.data)})},$scope.nextPageJP=function(){$scope.lowJP=$scope.highJP,$scope.highJP+=3,$scope.startOfJPList=!1,console.log("Count: "+$scope.countJP+" Low, High: "+$scope.lowJP+", "+$scope.highJP),$scope.highJP>=$scope.countJP?($scope.highJP=$scope.countJP,$scope.endOfJPList=!0):$scope.endOfJPList=!1},$scope.prevPage=function(){$scope.high=$scope.low,$scope.low=$scope.low-3,$scope.endOfList=!1,console.log($scope.low+", "+$scope.high),$http({url:'http://localhost:4000/api/projects?where={"creator":"'+$scope.userid+'"}&skip='+$scope.low+"&limit=3",method:"GET"}).success(function(data){$scope.projects=data.data,$scope.low<=0?$scope.startOfList=!0:$scope.startOfList=!1}).error(function(data){console.log("Error: "+data.data)})},$scope.prevPageJP=function(){$scope.highJP=$scope.lowJP,$scope.lowJP=$scope.lowJP-3,$scope.endOfJPList=!1,console.log($scope.lowJP+", "+$scope.highJP),$scope.lowJP<=0?$scope.startOfJPList=!0:$scope.startOfJPList=!1},$scope.sendSearch=function(value){$rootScope.basicQuery=value,window.location.href="#/Search"},$scope.leaveProject=function(id){for(var projectIDtoDelete=id,i=0;i<$scope.userX.joinedProjects.length;i++)if($scope.userX.joinedProjects[i]==projectIDtoDelete){$scope.userX.joinedProjects.splice(i,1);break}for(var i=0;i<$scope.userX.pendingProjects.length;i++)if($scope.userX.pendingProjects[i]==projectIDtoDelete){$scope.userX.pendingProjects.splice(i,1);break}Data.getProject(projectIDtoDelete).success(function(data){$scope.projectToUpdate=data.data,$scope.approvedMembersToUpdate=data.data.approvedMembers,$scope.pendingMembersToUpdate=data.data.pendingMembers;for(var i=0;i<$scope.approvedMembersToUpdate.length;i++)if($scope.approvedMembersToUpdate[i]==$scope.userid){$scope.approvedMembersToUpdate.splice(i,1);break}for(var i=0;$scope.pendingMembersToUpdate.length;i++)if($scope.pendingMembersToUpdate[i]==$scope.userid){$scope.pendingMembersToUpdate.splice(i,1);break}var updatedProject={name:$scope.projectToUpdate.name,description:$scope.projectToUpdate.description,deadline:$scope.projectToUpdate.deadline,visible:$scope.projectToUpdate.visible,skills:$scope.projectToUpdate.skills,categories:$scope.projectToUpdate.categories,tags:$scope.projectToUpdate.tags,creator:$scope.projectToUpdate.creator,pendingMembers:$scope.pendingMembersToUpdate,approvedMembers:$scope.approvedMembersToUpdate,dateCreated:$scope.projectToUpdate.dateCreated,imageURL:$scope.projectToUpdate.imageURL};$http({url:"http://localhost:4000/api/projects/"+projectIDtoDelete,data:updatedProject,method:"PUT"}).success(function(data){console.log("Project updated"),Data.editUser($scope.userX._id,$scope.userX).success(function(data){location.reload()})}).error(function(data){console.log("Error: "+data)})}).error(function(data){console.log("Error: "+data)})},$scope.deleteSkill=function(name){$scope.key="name",$scope.skillName=name,console.log($scope.skillName),$http({url:'http://localhost:4000/api/skills?where={"name":"'+$scope.skillName+'"}',method:"GET"}).success(function(data){console.log("Made it "+data.data[0]),$scope.skillX=data.data[0],$scope.skillID=data.data[0]._id,console.log($scope.skillID);for(var i=0;i<$scope.skills.length;i++)$scope.skills[i]==$scope.skillID&&$scope.skills.splice(i,1);for(var i=0;i<$scope.skillNames.length;i++)$scope.skillNames[i]==$scope.skillName&&$scope.skillNames.splice(i,1);var updatedUser={name:$scope.username,email:$scope.userX.email,password:$scope.userX.password,skills:$scope.skills,myProjects:$scope.myProjects,joinedProjects:$scope.joinedProjects,dateCreated:$scope.userX.dateCreated};$http({url:"http://localhost:4000/api/users/"+$scope.userid,data:updatedUser,method:"PUT"}).success(function(data){console.log("User updated")}).error(function(data){console.log("Error: "+data)})}).error(function(data){console.log("Error: "+data)})},$scope.inList=!1,$scope.updateSkills=function(skill){$scope.inList=!1;var flag=!1,skillIsNew=!0;console.log($scope.flag),$scope.enteredSkill=skill;for(var i=0;i<$scope.skills.length;i++)null==$scope.skills[i]|void 0==$scope.skills[i]&&($scope.skills.splice(i,1),console.log($scope.skills),i-=1);for(var i=0;i<$scope.skillNames.length;i++)null==$scope.skillNames[i]|void 0==$scope.skillNames[i]&&$scope.skillNames.splice(i,1),$scope.enteredSkill==$scope.skillNames[i]&&(console.log("already in your list!"),$scope.inList=!0,skillIsNew=!1,flag=!0);for(var i=0;i<$scope.allSkillsNames.length;i++)null==$scope.allSkillsNames[i]|void 0==$scope.allSkillsNames[i]&&$scope.allSkillsNames.splice(i,1),$scope.enteredSkill==$scope.allSkillsNames[i]&&0==flag&&(flag=!0,skillIsNew=!1,$http({url:'http://localhost:4000/api/skills?where={"name":"'+$scope.enteredSkill+'"}',method:"GET"}).success(function(data){console.log("Made it "+data.data[0].name),$scope.skillXupdate=data.data[0],$scope.skillIDupdate=data.data[0]._id,console.log($scope.skillIDupdate),$scope.skills.push($scope.skillIDupdate),$scope.skillNames.push($scope.enteredSkill);var updatedUser={name:$scope.username,email:$scope.userX.email,password:$scope.userX.password,skills:$scope.skills,myProjects:$scope.myProjects,joinedProjects:$scope.joinedProjects,dateCreated:$scope.userX.dateCreated};console.log("Updated User: "+updatedUser),$http({url:"http://localhost:4000/api/users/"+$scope.userid,data:updatedUser,method:"PUT"}).success(function(data){console.log("New Skill updated to User"),console.log(data)}).error(function(data){console.log("Error: "+data)})}).error(function(data){console.log("Error: "+data)}));if(0==flag&&1==skillIsNew){console.log("I'm in the new skill area"),$scope.newSkillName=$scope.enteredSkill,console.log($scope.newSkillName);var newSkill={name:$scope.newSkillName};console.log(newSkill),Data.createSkill(newSkill).success(function(data){console.log("Skill created"),$scope.skillX=data.data,$scope.skillXName=data.data.name,$scope.skillID=data.data._id,$scope.skills.push($scope.skillID),$scope.skillNames.push($scope.skillXName);var updatedUser={name:$scope.username,email:$scope.userX.email,password:$scope.userX.password,skills:$scope.skills,myProjects:$scope.myProjects,joinedProjects:$scope.joinedProjects,dateCreated:$scope.userX.dateCreated};console.log(updatedUser),$http({url:"http://localhost:4000/api/users/"+$scope.userid,data:updatedUser,method:"PUT"}).success(function(data){console.log("New Skill updated to User")}).error(function(data){console.log("Error: "+data)})}).error(function(data){console.log("Error: "+data)})}}}).error(function(data){console.log("Error: "+data)})}]),BulletinControllers.controller("ProfileController",["$scope","$rootScope","$window","Data","$http","$route","$routeParams",function($scope,$rootScope,$window,Data,$http,$route,$routeParams){$(document).foundation(),$rootScope.searchValue="",$scope.low=0,$scope.high=3,$scope.lowJP=0,$scope.highJP=3,$scope.startOfList=!0,$scope.startOfJPList=!0,$scope.shown=3,$scope.isLoggedIn=!1,Data.getProfile().success(function(data){console.log(data.data),null!=data.data&&($scope.isLoggedIn=!0,$scope.thisUser=data.data)}),$scope.showSettingsMenu=function(){$("#settingsMenu").toggle()},$scope.showSettingsMenuMED=function(){$("#settingsMenuMED").toggle()},$scope.logOut=function(){$http.get("http://localhost:4000/api/logout").success(function(data){location.reload()})},$scope.username="",$scope.skills=[],$scope.myProjects=[],$scope.joinedProjects=[],$scope.pendingProjects=[],$scope.userid=$routeParams.userid,$scope.skillNames=[],$scope.newSkill="",Data.getUser($scope.userid).success(function(data){$scope.userX=data.data,$scope.username=data.data.name,$scope.skills=data.data.skills,$scope.myProjects=data.data.myProjects,$scope.joinedProjects=data.data.joinedProjects,$scope.pendingProjects=data.data.pendingProjects,$scope.image=data.data.imageURL;for(var i=0;i<$scope.skills.length;i++)Data.getSkill($scope.skills[i]).success(function(data){$scope.skillName=data.data.name,$scope.skillNames.push($scope.skillName)}).error(function(data){console.log("Error: "+data)});$scope.joinedProjectsInfo=[];for(var i=0;i<$scope.joinedProjects.length;i++)Data.getProject($scope.joinedProjects[i]).success(function(data){console.log("Got joined projects: "+data.data),$scope.joinedProjectX=data.data,$scope.joinedProjectsInfo.push($scope.joinedProjectX)}).error(function(data){console.log("Error: "+data)})}).error(function(data){console.log("Error: "+data)}),$http({url:'http://localhost:4000/api/projects?where={"creator":"'+$scope.userid+'"}&count=true',method:"GET"}).success(function(data){$scope.count=data.data,console.log("Count: "+$scope.count),$scope.high>=$scope.count?$scope.endOfList=!0:$scope.endOfList=!1}).error(function(data){console.log("Error: "+data)}),$http({url:'http://localhost:4000/api/projects?where={"creator":"'+$scope.userid+'"}&skip='+$scope.low+"&limit=3",method:"GET"}).success(function(data){$scope.projects=data.data}).error(function(data){console.log("Error: "+data)}),$http({url:'http://localhost:4000/api/projects?where={"approvedMembers":"'+$scope.userid+'"}',method:"GET"}).success(function(data){$scope.joinedProjectsAM=data.data,console.log($scope.joinedProjectsAll),$scope.pendingAM=[];for(var i=0;i<$scope.joinedProjectsAM.length;i++)$scope.pendingAM[i]="Accepted";$http({url:'http://localhost:4000/api/projects?where={"pendingMembers":"'+$scope.userid+'"}',method:"GET"}).success(function(data){$scope.joinedProjectsPM=data.data,$scope.joinedProjectsAll=$scope.joinedProjectsAM.concat($scope.joinedProjectsPM),console.log($scope.joinedProjectsAll),$scope.countJP=$scope.joinedProjectsAll.length,$scope.highJP>=$scope.countJP?$scope.endOfJPList=!0:$scope.endOfJPList=!1,$scope.pendingPM=[];for(var i=0;i<$scope.joinedProjectsPM.length;i++)$scope.pendingPM[i]="Pending";$scope.pending=$scope.pendingAM.concat($scope.pendingPM),console.log($scope.pending),$scope.repeatData=$scope.joinedProjectsAll.map(function(value,index){return{data:value,value:$scope.pending[index]}}),console.log("Repeat Data: "+$scope.repeatData)}).error(function(data){console.log("Error: "+data)})}).error(function(data){console.log("Error: "+data)}),$scope.allSkillsNames=[],Data.getSkills().success(function(data){$scope.allSkills=data.data,console.log("got all skills");for(var i=0;i<$scope.allSkills.length;i++)Data.getSkill($scope.allSkills[i]._id).success(function(data){$scope.oneSkillName=data.data.name,$scope.allSkillsNames.push($scope.oneSkillName)}).error(function(data){console.log("Error: "+data)})}).error(function(data){console.log("Error: "+data)}),$scope.setSkillInput=function(name){$scope.newSkill=name},$scope.loadDetails=function(id){Data.getProject(id).success(function(data){$scope.projectY=data.data}).error(function(data){console.log("Error: "+data)})},$scope.nextPage=function(){$scope.low=$scope.high,$scope.high+=3,$scope.startOfList=!1,console.log("Count: "+$scope.count+" Low, High: "+$scope.low+", "+$scope.high),$http({url:'http://localhost:4000/api/projects?where={"creator":"'+$scope.userid+'"}&skip='+$scope.low+"&limit=3",method:"GET"}).success(function(data){$scope.projects=data.data,$scope.high>=$scope.count?($scope.high=$scope.count,$scope.endOfList=!0):$scope.endOfList=!1}).error(function(data){console.log("Error: "+data.data)})},$scope.nextPageJP=function(){$scope.lowJP=$scope.highJP,$scope.highJP+=3,$scope.startOfJPList=!1,console.log("Count: "+$scope.countJP+" Low, High: "+$scope.lowJP+", "+$scope.highJP),$scope.highJP>=$scope.countJP?($scope.highJP=$scope.countJP,$scope.endOfJPList=!0):$scope.endOfJPList=!1},$scope.prevPage=function(){$scope.high=$scope.low,$scope.low=$scope.low-3,$scope.endOfList=!1,console.log($scope.low+", "+$scope.high),$http({url:'http://localhost:4000/api/projects?where={"creator":"'+$scope.userid+'"}&skip='+$scope.low+"&limit=3",method:"GET"}).success(function(data){$scope.projects=data.data,$scope.low<=0?$scope.startOfList=!0:$scope.startOfList=!1}).error(function(data){console.log("Error: "+data.data)})},$scope.prevPageJP=function(){$scope.highJP=$scope.lowJP,$scope.lowJP=$scope.lowJP-3,$scope.endOfJPList=!1,console.log($scope.lowJP+", "+$scope.highJP),$scope.lowJP<=0?$scope.startOfJPList=!0:$scope.startOfJPList=!1},$scope.sendSearch=function(value){$rootScope.searchValue=value,window.location.href="#/Search"},$scope.removeJoinModal=function(){$(".modalJoinProfile").fadeOut(500)},$scope.joinProject=function(id){Data.getProfile().success(function(data){if(null!=data.data){for(var projectIDtoJoin=id,alreadyJoined=!1,i=0;$scope.pendingProjects.length;i++)if($scope.pendingProjects[i]==projectIDtoJoin){alreadyJoined=!0;break}0==alreadyJoined&&($scope.pendingProjects.push(projectIDtoJoin),Data.getProject(projectIDtoJoin).success(function(data){$scope.projectToUpdate2=data.data,$scope.pendingMembersToUpdate2=data.data.pendingMembers,Data.getProfile().success(function(data){$scope.currentUser=data.data,$scope.currentUser.pendingProjects.push($scope.projectToUpdate2._id),Data.editUser($scope.currentUser._id,$scope.currentUser),$scope.pendingMembersToUpdate2.push($scope.currentUser._id);var updatedProject={name:$scope.projectToUpdate2.name,description:$scope.projectToUpdate2.description,deadline:$scope.projectToUpdate2.deadline,visible:$scope.projectToUpdate2.visible,skills:$scope.projectToUpdate2.skills,categories:$scope.projectToUpdate2.categories,tags:$scope.projectToUpdate2.tags,creator:$scope.projectToUpdate2.creator,pendingMembers:$scope.pendingMembersToUpdate2,approvedMembers:$scope.projectToUpdate2.approvedMembers,dateCreated:$scope.projectToUpdate2.dateCreated,imageURL:$scope.projectToUpdate2.imageURL};$http({url:"http://localhost:4000/api/projects/"+projectIDtoJoin,data:updatedProject,method:"PUT"}).success(function(data){console.log("Project joined and updated!"),location.reload()}).error(function(data){console.log("Error: "+data)})})}).error(function(data){console.log("Error: "+data)}))}else console.log("NOT LOGGED IN!"),$scope.joinInfo="You must be logged in to join a project!",$(".modalJoinProfile").fadeIn(500)})}}]),BulletinControllers.controller("SearchController",["$scope","$routeParams","$rootScope","$http","$window","Data",function($scope,$routeParams,$rootScope,$http,$window,Data){$window.sessionStorage.baseUrl="http://localhost:4000",$scope.advFilter=[],$scope.isLoggedIn=!1,Data.getProfile().success(function(data){function getProjects(){$scope.usernames=[];var counter=0;$scope.showM=[],$scope.joinM=[],Data.getProjects({where:$scope.whereQuery,select:{_id:1,name:1,creator:1,dateCreated:1,description:1,deadline:1,categories:1,skills:1,pendingMembers:1}}).success(function(data){$scope.projects=data.data,console.log($scope.projects.length),counter=$scope.projects.length;for(var i=0;counter>i;i++)$scope.showM.push(-1),$scope.joinM.push(-1);$scope.showModal=function(index){$scope.thisSkills=[];for(var i=0;i<$scope.projects[index].skills.length;i++)Data.getSkill($scope.projects[index].skills[i]).success(function(data){$scope.thisSkills.push(data.data.name),console.log($scope.thisSkills)});$scope.showM[index]=1},$scope.removeModal=function(index){$scope.showM[index]=-1},$scope.joinThis=function(index){$scope.showM[index]=-1,$scope.joinM[index]=1,Data.getProfile().success(function(data){null!=data.data?$scope.projects[index].pendingMembers.indexOf($scope.thisUserId)<0?($scope.projects[index].pendingMembers.push($scope.thisUserId),Data.editProject($scope.projects[index]._id,$scope.projects[index]),$scope.thisUser.pendingProjects.push($scope.projects[index]._id),Data.editUser($scope.thisUserId,$scope.thisUser),$scope.joinInfo="We have added you to the waiting list!"):$scope.joinInfo="You are already in the pending list!":$scope.joinInfo="You need to sign in to join this project!"})},$scope.removeJoinModal=function(index){$scope.joinM[index]=-1}})}if(null!=data.data){$scope.thisUser=data.data,$scope.thisUserId=$scope.thisUser._id,$scope.isLoggedIn=!0,null!=$rootScope.basicQuery&&""!=$rootScope.basicQuery&&($scope.basicQuery=$rootScope.basicQuery),$scope.thisUserSkills=data.data.skills;for(var i=0;i<$scope.thisUserSkills.length;i++);$scope.whereQuery="{}",$scope.matchSkillOption=!1}$scope.logOut=function(){$http.get("http://localhost:4000/api/logout").success(function(data){location.reload()})},getProjects(),$scope.remove=function(ary,elem){var i=ary.indexOf(elem);return i>=0&&ary.splice(i,1),ary},$scope.addFilter=function(id){"rgb(204, 204, 204)"!==$("#"+id).css("background-color")?($("#"+id).css("background-color","rgb(204, 204, 204)"),$scope.advFilter.push("'"+id+"'"),$scope.advFilter.length>0?$scope.whereQuery="{categories: { $all:[ "+$scope.advFilter+"]}}":$scope.whereQuery="{}",getProjects()):($("#"+id).css("background-color","rgb(43, 43, 43)"),$scope.advFilter=$scope.remove($scope.advFilter,"'"+id+"'"),$scope.advFilter.length>0?$scope.whereQuery="{categories: { $all:[ "+$scope.advFilter+"]}}":$scope.whereQuery="{}",getProjects())},$scope.$watch("matchSkillOption",function(oldVal,newVal){if(newVal!==oldVal)if($scope.matchSkillOption){$scope.advFilter.length>0?$scope.whereQuery="{categories: { $all:[ "+$scope.advFilter+"]},":$scope.whereQuery="{",$scope.whereQuery+="skills: { $elemMatch: { $in: [";for(var i=0;i<$scope.thisUserSkills.length;i++)$scope.whereQuery+="'"+$scope.thisUserSkills[i]+"',";$scope.whereQuery+="]} }}",console.log($scope.whereQuery),getProjects()}else $scope.advFilter.length>0?$scope.whereQuery="{categories: { $all:[ "+$scope.advFilter+"]}}":$scope.whereQuery="{}",getProjects()})}),$scope.showSettingsMenu=function(){$("#settingsMenu").toggle()},$scope.showSettingsMenuMED=function(){$("#settingsMenuMED").toggle()}}]),BulletinControllers.controller("EditProjectController",["$scope","$http","$window","Data","$routeParams",function($scope,$http,$window,Data,$routeParams){$scope.projectId=$routeParams.projectid,$("#SUskillsInput").focusin(function(){$(".SUskillsresults").show()}),$(".SUskillsresults").click(function(){$(".SUskillsresults").hide()}),$("body").click(function(evt){"SUskillsInput"!=evt.target.id&&$(".SUskillsresults").hide()}),$("#SUcloseDeleteModalError").click(function(){$("#SUdeleteModalError").hide()}),$("#SUcloseSubmitModalError").click(function(){$("#SUsubmitModalError").hide()}),$scope.openSubmitModal=function(){$("#SUsubmitmodal").show()},$scope.hideSubmitModal=function(){$("#SUsubmitmodal").hide()},$scope.showDeleteModal=function(){$("#SUdeletemodal").show()},$scope.hideDeleteModal=function(){$("#SUdeletemodal").hide()},Data.getCategories().success(function(data){$scope.categories=data.data,console.log($scope.categories)}),Data.getSkills().success(function(data){$scope.skills=data.data}),Data.getProject($scope.projectId).success(function(data){$scope.thisProject=data.data,console.log($scope.thisProject),$scope.thisProject.deadline=new Date($scope.thisProject.deadline),$scope.webClicked=!1,$scope.securityClicked=!1,$scope.mobileClicked=!1,$scope.researchClicked=!1,$scope.graphicsClicked=!1,$scope.networkClicked=!1,$scope.gameDevClicked=!1,$scope.bigDataClicked=!1,$scope.databaseClicked=!1;for(var i=0;i<$scope.thisProject.categories.length;i++)"WEB"==$scope.thisProject.categories[i].toUpperCase()?($("#SUWebcategory").css({"background-color":"gray",color:"white"}),$scope.webClicked=!0):"SECURITY"==$scope.thisProject.categories[i].toUpperCase()?($("#SUSecuritycategory").css({"background-color":"gray",color:"white"}),$scope.securityClicked=!0):"MOBILE"==$scope.thisProject.categories[i].toUpperCase()?($("#SUMobilecategory").css({"background-color":"gray",color:"white"}),$scope.mobileClicked=!0):"RESEARCH"==$scope.thisProject.categories[i].toUpperCase()?($("#SUResearchcategory").css({"background-color":"gray",color:"white"}),$scope.researchClicked=!0):"NETWORK"==$scope.thisProject.categories[i].toUpperCase()?($("#SUNetworkcategory").css({"background-color":"gray",color:"white"}),$scope.networkClicked=!0):"GAMEDEV"==$scope.thisProject.categories[i].toUpperCase()?($("[id='SUGame Devcategory']").css({"background-color":"gray",color:"white"}),$scope.gameDevClicked=!0):"DATABASE"==$scope.thisProject.categories[i].toUpperCase()?($("#SUDatabasecategory").css({"background-color":"gray",color:"white"}),$scope.databaseClicked=!0):"GRAPHICS"==$scope.thisProject.categories[i].toUpperCase()?($("#SUGraphicscategory").css({"background-color":"gray",color:"white"}),$scope.graphicsClicked=!0):"BIGDATA"==$scope.thisProject.categories[i].toUpperCase()&&($("[id='SUBig Datacategory']").css({"background-color":"gray",color:"white"}),$scope.bigDataClicked=!0);$scope.acceptUser=function(user){var index=user.pendingProjects.indexOf($scope.projectId);-1!=index&&(user.pendingProjects.splice(index,1),user.joinedProjects.push($scope.projectId)),Data.editUser(user._id,user).success(function(data){console.log(data);var index=$scope.pendingMembers.indexOf(user);if(-1!=index){$scope.pendingMembers.splice(index,1);var index1=$scope.thisProject.pendingMembers.indexOf(user._id);$scope.thisProject.pendingMembers.splice(index1,1)}$scope.approvedMembers.push(user),$scope.thisProject.approvedMembers.push(user._id),Data.editProject($scope.projectId,$scope.thisProject).success(function(data){console.log(data)})})},$scope.declineUser=function(user){var index1=user.pendingProjects.indexOf($scope.projectId),index2=user.joinedProjects.indexOf($scope.projectId);-1!=index1?user.pendingProjects.splice(index1,1):-1!=index2&&user.joinedProjects.splice(index2,1),Data.editUser(user._id,user).success(function(data){console.log(data);var index3=$scope.pendingMembers.indexOf(user),index4=$scope.approvedMembers.indexOf(user);if(-1!=index3){$scope.pendingMembers.splice(index3,1);var index5=$scope.thisProject.pendingMembers.indexOf(user._id);$scope.thisProject.pendingMembers.splice(index5,1),Data.editProject($scope.projectId,$scope.thisProject).success(function(data){console.log(data)})}else if(-1!=index4){$scope.approvedMembers.splice(index4,1);var index6=$scope.thisProject.approvedMembers.indexOf(user._id);$scope.thisProject.approvedMembers.splice(index6,1),Data.editProject($scope.projectId,$scope.thisProject).success(function(data){console.log(data)})}})},$scope.addSkill=function(skill){var index=$scope.skills.indexOf(skill);$scope.skills.splice(index,1),$scope.thisProject.skills.push(skill._id),$scope.lookingFor.push(skill)},$scope.removeSkill=function(skill){var index=$scope.thisProject.skills.indexOf(skill._id),index1=$scope.lookingFor.indexOf(skill);$scope.lookingFor.splice(index1,1),$scope.thisProject.skills.splice(index,1);var index2=$scope.skills.map(function(x){return x._id}).indexOf(skill._id);-1==index2&&$scope.skills.push(skill)},$scope.addNewSkill=function(skill){skill.name=skill.name.toUpperCase().trim();var index=$scope.skills.map(function(x){return x.name}).indexOf(skill.name);-1==index&&Data.createSkill(skill).success(function(data){console.log(data),$scope.lookingFor.push(data.data),$scope.currentProject.skills.push(data.data)})},$scope.lookingFor=[];for(var i=0;i<$scope.thisProject.skills.length;i++)Data.getSkill($scope.thisProject.skills[i]).success(function(data){console.log(data),$scope.lookingFor.push(data.data)});$scope.tags=$scope.thisProject.tags.join(),$scope.approvedMembers=[],$scope.pendingMembers=[];for(var i=0;i<$scope.thisProject.approvedMembers.length;i++)Data.getUser($scope.thisProject.approvedMembers[i]).success(function(data){$scope.approvedMembers.push(data.data)});for(var j=0;j<$scope.thisProject.pendingMembers.length;j++)Data.getUser($scope.thisProject.pendingMembers[j]).success(function(data){$scope.pendingMembers.push(data.data)});$scope.addCategory=function(category){if("Web"==category)if($scope.webClicked){$("#SUWebcategory").css({"background-color":"white",color:"black"}),$scope.webClicked=!1;var index=$scope.thisProject.categories.indexOf("Web");$scope.thisProject.categories.splice(index,1)}else $("#SUWebcategory").css({"background-color":"gray",color:"white"}),$scope.webClicked=!0,$scope.thisProject.categories.push("Web");if("Security"==category)if($scope.securityClicked){
$("#SUSecuritycategory").css({"background-color":"white",color:"black"}),$scope.securityClicked=!1;var index=$scope.thisProject.categories.indexOf("Security");$scope.thisProject.categories.splice(index,1)}else $("#SUSecuritycategory").css({"background-color":"gray",color:"white"}),$scope.securityClicked=!0,$scope.thisProject.categories.push("Security");if("Mobile"==category)if($scope.mobileClicked){$("#SUMobilecategory").css({"background-color":"white",color:"black"}),$scope.mobileClicked=!1;var index=$scope.thisProject.categories.indexOf("Mobile");$scope.thisProject.categories.splice(index,1)}else $("#SUMobilecategory").css({"background-color":"gray",color:"white"}),$scope.mobileClicked=!0,$scope.thisProject.categories.push("Mobile");if("Research"==category)if($scope.researchClicked){$("#SUResearchcategory").css({"background-color":"white",color:"black"}),$scope.researchClicked=!1;var index=$scope.thisProject.categories.indexOf("Research");$scope.thisProject.categories.splice(index,1)}else $("#SUResearchcategory").css({"background-color":"gray",color:"white"}),$scope.researchClicked=!0,$scope.thisProject.categories.push("Research");if("Network"==category)if($scope.networkClicked){$("#SUNetworkcategory").css({"background-color":"white",color:"black"}),$scope.networkClicked=!1;var index=$scope.thisProject.categories.indexOf("Network");$scope.thisProject.categories.splice(index,1)}else $("#SUNetworkcategory").css({"background-color":"gray",color:"white"}),$scope.networkClicked=!0,$scope.thisProject.categories.push("Network");if("Graphics"==category)if($scope.graphicsClicked){$("#SUGraphicscategory").css({"background-color":"white",color:"black"}),$scope.graphicsClicked=!1;var index=$scope.thisProject.categories.indexOf("Graphics");$scope.thisProject.categories.splice(index,1)}else $("#SUGraphicscategory").css({"background-color":"gray",color:"white"}),$scope.graphicsClicked=!0,$scope.thisProject.categories.push("Graphics");if("Game Dev"==category)if($scope.gameDevClicked){$("[id='SUGame Devcategory']").css({"background-color":"white",color:"black"}),$scope.gameDevClicked=!1;var index=$scope.thisProject.categories.indexOf("GameDev");$scope.thisProject.categories.splice(index,1)}else $("[id='SUGame Devcategory']").css({"background-color":"gray",color:"white"}),$scope.gameDevClicked=!0,$scope.thisProject.categories.push("GameDev");if("Big Data"==category)if($scope.bigDataClicked){$("[id='SUBig Datacategory']").css({"background-color":"white",color:"black"}),$scope.bigDataClicked=!1;var index=$scope.thisProject.categories.indexOf("BigData");$scope.thisProject.categories.splice(index,1)}else $("[id='SUBig Datacategory']").css({"background-color":"gray",color:"white"}),$scope.bigDataClicked=!0,$scope.thisProject.categories.push("BigData");if("Database"==category)if($scope.databaseClicked){$("#SUDatabasecategory").css({"background-color":"white",color:"black"}),$scope.databaseClicked=!1;var index=$scope.thisProject.categories.indexOf("Database");$scope.thisProject.categories.splice(index,1)}else $("#SUDatabasecategory").css({"background-color":"gray",color:"white"}),$scope.databaseClicked=!0,$scope.thisProject.categories.push("Database")},$scope.submitProject=function(){if(""!=$scope.tags)var tags=$scope.tags.split(",");$scope.thisProject.tags=tags,Data.editProject($scope.projectId,$scope.thisProject).success(function(data){console.log(data),$scope.hideSubmitModal(),$window.location.href="#/MyProfilePage"}).error(function(data){console.log(data),$scope.hideSubmitModal(),$("#SUsubmitModalError").show()})},$scope.deleteProject=function(){Data.getUser($scope.thisProject.creator).success(function(data){$scope.currentUser=data.data;var index=$scope.currentUser.myProjects.indexOf($scope.projectId);$scope.currentUser.myProjects.splice(index,1),console.log($scope.currentUser),Data.editUser($scope.currentUser._id,$scope.currentUser).success(function(data){console.log(data);for(var i=0;i<$scope.thisProject.approvedMembers.length;i++)Data.getUser($scope.thisProject.approvedMembers[i]).success(function(data){var index=data.data.joinedProjects.indexOf($scope.thisProject._id);data.data.joinedProjects.splice(index,1),Data.editUser($scope.thisProject.approvedMembers[i]._id,$scope.thisProject.approvedMembers[i])});for(var i=0;i<$scope.thisProject.pendingMembers.length;i++)Data.getUser($scope.thisProject.pendingMembers[i]).success(function(data){var index=data.data.pendingProjects.indexOf($scope.thisProject._id);data.data.pendingProjects.splice(index,1),Data.editUser($scope.thisProject.pendingMembers[i]._id,$scope.thisProject.pendingMembers[i])});Data.deleteProject($scope.projectId).success(function(data){console.log(data),$scope.hideDeleteModal(),$window.location.href="#/MyProfilePage"}).error(function(data){$scope.hideDeleteModal(),$("#SUdeleteModalError").show()})})})}})}]),BulletinControllers.controller("CreateProjectController",["$scope","$http","$window","$routeParams","Data",function($scope,$http,$window,$routeParams,Data){$("#SUskillsInput").focusin(function(){$(".SUskillsresults").show()}),$(".SUskillsresults").click(function(){$(".SUskillsresults").hide()}),$("body").click(function(evt){"SUskillsInput"!=evt.target.id&&$(".SUskillsresults").hide()}),$("#SUcloseSubmitModalError").click(function(){$("#SUsubmitModalError").hide()}),$scope.openSubmitModal=function(){$("#SUsubmitmodal").show()},$scope.hideSubmitModal=function(){$("#SUsubmitmodal").hide()},Data.getSkills().success(function(data){$scope.skills=data.data}),Data.getCategories().success(function(data){$scope.categories=data.data,console.log($scope.categories)}),$scope.currentProject={},$scope.currentProject.skills=[],$scope.currentProject.visible=!0,$scope.lookingFor=[],$scope.addSkill=function(skill){var index=$scope.skills.indexOf(skill);$scope.skills.splice(index,1),$scope.currentProject.skills.push(skill._id),$scope.lookingFor.push(skill)},$scope.removeSkill=function(skill){var index=$scope.currentProject.skills.indexOf(skill._id),index1=$scope.lookingFor.indexOf(skill);$scope.lookingFor.splice(index1,1),$scope.currentProject.skills.splice(index,1);var index2=$scope.skills.indexOf(skill);-1==index2&&$scope.skills.push(skill)},$scope.addNewSkill=function(skill){skill.name=skill.name.toUpperCase().trim();var index=$scope.skills.map(function(x){return x.name}).indexOf(skill.name);-1==index&&Data.createSkill(skill).success(function(data){console.log(data),$scope.lookingFor.push(data.data),$scope.currentProject.skills.push(data.data)})},$scope.webClicked=!1,$scope.securityClicked=!1,$scope.mobileClicked=!1,$scope.researchClicked=!1,$scope.graphicsClicked=!1,$scope.networkClicked=!1,$scope.gameDevClicked=!1,$scope.bigDataClicked=!1,$scope.databaseClicked=!1,$scope.currentProject.categories=[],$scope.addCategory=function(category){if("Web"==category)if($scope.webClicked){$("#SUWebcategory").css({"background-color":"white",color:"black"}),$scope.webClicked=!1;var index=$scope.currentProject.categories.indexOf("Web");$scope.currentProject.categories.splice(index,1)}else $("#SUWebcategory").css({"background-color":"gray",color:"white"}),$scope.webClicked=!0,$scope.currentProject.categories.push("Web");if("Security"==category)if($scope.securityClicked){$("#SUSecuritycategory").css({"background-color":"white",color:"black"}),$scope.securityClicked=!1;var index=$scope.currentProject.categories.indexOf("Security");$scope.currentProject.categories.splice(index,1)}else $("#SUSecuritycategory").css({"background-color":"gray",color:"white"}),$scope.securityClicked=!0,$scope.currentProject.categories.push("Security");if("Mobile"==category)if($scope.mobileClicked){$("#SUMobilecategory").css({"background-color":"white",color:"black"}),$scope.mobileClicked=!1;var index=$scope.currentProject.categories.indexOf("Mobile");$scope.currentProject.categories.splice(index,1)}else $("#SUMobilecategory").css({"background-color":"gray",color:"white"}),$scope.mobileClicked=!0,$scope.currentProject.categories.push("Mobile");if("Research"==category)if($scope.researchClicked){$("#SUResearchcategory").css({"background-color":"white",color:"black"}),$scope.researchClicked=!1;var index=$scope.currentProject.categories.indexOf("Research");$scope.currentProject.categories.splice(index,1)}else $("#SUResearchcategory").css({"background-color":"gray",color:"white"}),$scope.researchClicked=!0,$scope.currentProject.categories.push("Research");if("Network"==category)if($scope.networkClicked){$("#SUNetworkcategory").css({"background-color":"white",color:"black"}),$scope.networkClicked=!1;var index=$scope.currentProject.categories.indexOf("Network");$scope.currentProject.categories.splice(index,1)}else $("#SUNetworkcategory").css({"background-color":"gray",color:"white"}),$scope.networkClicked=!0,$scope.currentProject.categories.push("Network");if("Graphics"==category)if($scope.graphicsClicked){$("#SUGraphicscategory").css({"background-color":"white",color:"black"}),$scope.graphicsClicked=!1;var index=$scope.currentProject.categories.indexOf("Graphics");$scope.currentProject.categories.splice(index,1)}else $("#SUGraphicscategory").css({"background-color":"gray",color:"white"}),$scope.graphicsClicked=!0,$scope.currentProject.categories.push("Graphics");if("Game Dev"==category)if($scope.gameDevClicked){$("[id='SUGame Devcategory']").css({"background-color":"white",color:"black"}),$scope.gameDevClicked=!1;var index=$scope.currentProject.categories.indexOf("GameDev");$scope.currentProject.categories.splice(index,1)}else $("[id='SUGame Devcategory']").css({"background-color":"gray",color:"white"}),$scope.gameDevClicked=!0,$scope.currentProject.categories.push("GameDev");if("Big Data"==category)if($scope.bigDataClicked){$("[id='SUBig Datacategory']").css({"background-color":"white",color:"black"}),$scope.bigDataClicked=!1;var index=$scope.currentProject.categories.indexOf("BigData");$scope.currentProject.categories.splice(index,1)}else $("[id='SUBig Datacategory']").css({"background-color":"gray",color:"white"}),$scope.bigDataClicked=!0,$scope.currentProject.categories.push("BigData");if("Database"==category)if($scope.databaseClicked){$("#SUDatabasecategory").css({"background-color":"white",color:"black"}),$scope.databaseClicked=!1;var index=$scope.currentProject.categories.indexOf("Database");$scope.currentProject.categories.splice(index,1)}else $("#SUDatabasecategory").css({"background-color":"gray",color:"white"}),$scope.databaseClicked=!0,$scope.currentProject.categories.push("Database")},$scope.submitProject=function(){if(void 0!=$scope.tags)var tags=$scope.tags.split(",");Data.getProfile().success(function(data){$scope.currentUser=data.data,$scope.userid=data.data._id,$scope.currentProject.creator=$scope.userid,$scope.currentProject.tags=tags,$scope.currentProject.creatorName=$scope.currentUser.name,console.log($scope.currentProject.creator),Data.createProject($scope.currentProject).success(function(data){$scope.projectId=data.data._id,$scope.currentUser.myProjects.push($scope.projectId),Data.editUser($scope.userid,$scope.currentUser).success(function(data){console.log(data),$scope.hideSubmitModal(),$window.location.href="#/MyProfilePage"})}).error(function(data){console.log(data),$scope.hideSubmitModal(),$("#SUsubmitModalError").show()})})}}]);